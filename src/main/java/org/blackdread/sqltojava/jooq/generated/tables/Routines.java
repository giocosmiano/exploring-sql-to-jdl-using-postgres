/*
 * This file is generated by jOOQ.
 */
package org.blackdread.sqltojava.jooq.generated.tables;


import org.blackdread.sqltojava.jooq.generated.InformationSchema;
import org.blackdread.sqltojava.jooq.generated.tables.records.RoutinesRecord;
import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;
import org.jooq.types.ULong;

import java.time.LocalDateTime;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class Routines extends TableImpl<RoutinesRecord> {

    /**
     * The reference instance of <code>information_schema.ROUTINES</code>
     */
    public static final Routines ROUTINES = new Routines();
    private static final long serialVersionUID = 1L;
    /**
     * The column <code>information_schema.ROUTINES.SPECIFIC_NAME</code>.
     */
    public final TableField<RoutinesRecord, String> SPECIFIC_NAME = createField(DSL.name("SPECIFIC_NAME"), SQLDataType.VARCHAR(64).nullable(false).defaultValue(DSL.inline("", SQLDataType.VARCHAR)), this, "");
    /**
     * The column <code>information_schema.ROUTINES.ROUTINE_CATALOG</code>.
     */
    public final TableField<RoutinesRecord, String> ROUTINE_CATALOG = createField(DSL.name("ROUTINE_CATALOG"), SQLDataType.VARCHAR(512).nullable(false).defaultValue(DSL.inline("", SQLDataType.VARCHAR)), this, "");
    /**
     * The column <code>information_schema.ROUTINES.ROUTINE_SCHEMA</code>.
     */
    public final TableField<RoutinesRecord, String> ROUTINE_SCHEMA = createField(DSL.name("ROUTINE_SCHEMA"), SQLDataType.VARCHAR(64).nullable(false).defaultValue(DSL.inline("", SQLDataType.VARCHAR)), this, "");
    /**
     * The column <code>information_schema.ROUTINES.ROUTINE_NAME</code>.
     */
    public final TableField<RoutinesRecord, String> ROUTINE_NAME = createField(DSL.name("ROUTINE_NAME"), SQLDataType.VARCHAR(64).nullable(false).defaultValue(DSL.inline("", SQLDataType.VARCHAR)), this, "");
    /**
     * The column <code>information_schema.ROUTINES.ROUTINE_TYPE</code>.
     */
    public final TableField<RoutinesRecord, String> ROUTINE_TYPE = createField(DSL.name("ROUTINE_TYPE"), SQLDataType.VARCHAR(9).nullable(false).defaultValue(DSL.inline("", SQLDataType.VARCHAR)), this, "");
    /**
     * The column <code>information_schema.ROUTINES.DATA_TYPE</code>.
     */
    public final TableField<RoutinesRecord, String> DATA_TYPE = createField(DSL.name("DATA_TYPE"), SQLDataType.VARCHAR(64).nullable(false).defaultValue(DSL.inline("", SQLDataType.VARCHAR)), this, "");
    /**
     * The column <code>information_schema.ROUTINES.CHARACTER_MAXIMUM_LENGTH</code>.
     */
    public final TableField<RoutinesRecord, Integer> CHARACTER_MAXIMUM_LENGTH = createField(DSL.name("CHARACTER_MAXIMUM_LENGTH"), SQLDataType.INTEGER, this, "");
    /**
     * The column <code>information_schema.ROUTINES.CHARACTER_OCTET_LENGTH</code>.
     */
    public final TableField<RoutinesRecord, Integer> CHARACTER_OCTET_LENGTH = createField(DSL.name("CHARACTER_OCTET_LENGTH"), SQLDataType.INTEGER, this, "");
    /**
     * The column <code>information_schema.ROUTINES.NUMERIC_PRECISION</code>.
     */
    public final TableField<RoutinesRecord, ULong> NUMERIC_PRECISION = createField(DSL.name("NUMERIC_PRECISION"), SQLDataType.BIGINTUNSIGNED, this, "");
    /**
     * The column <code>information_schema.ROUTINES.NUMERIC_SCALE</code>.
     */
    public final TableField<RoutinesRecord, Integer> NUMERIC_SCALE = createField(DSL.name("NUMERIC_SCALE"), SQLDataType.INTEGER, this, "");
    /**
     * The column <code>information_schema.ROUTINES.DATETIME_PRECISION</code>.
     */
    public final TableField<RoutinesRecord, ULong> DATETIME_PRECISION = createField(DSL.name("DATETIME_PRECISION"), SQLDataType.BIGINTUNSIGNED, this, "");
    /**
     * The column <code>information_schema.ROUTINES.CHARACTER_SET_NAME</code>.
     */
    public final TableField<RoutinesRecord, String> CHARACTER_SET_NAME = createField(DSL.name("CHARACTER_SET_NAME"), SQLDataType.VARCHAR(64), this, "");
    /**
     * The column <code>information_schema.ROUTINES.COLLATION_NAME</code>.
     */
    public final TableField<RoutinesRecord, String> COLLATION_NAME = createField(DSL.name("COLLATION_NAME"), SQLDataType.VARCHAR(64), this, "");
    /**
     * The column <code>information_schema.ROUTINES.DTD_IDENTIFIER</code>.
     */
    public final TableField<RoutinesRecord, String> DTD_IDENTIFIER = createField(DSL.name("DTD_IDENTIFIER"), SQLDataType.CLOB, this, "");
    /**
     * The column <code>information_schema.ROUTINES.ROUTINE_BODY</code>.
     */
    public final TableField<RoutinesRecord, String> ROUTINE_BODY = createField(DSL.name("ROUTINE_BODY"), SQLDataType.VARCHAR(8).nullable(false).defaultValue(DSL.inline("", SQLDataType.VARCHAR)), this, "");
    /**
     * The column <code>information_schema.ROUTINES.ROUTINE_DEFINITION</code>.
     */
    public final TableField<RoutinesRecord, String> ROUTINE_DEFINITION = createField(DSL.name("ROUTINE_DEFINITION"), SQLDataType.CLOB, this, "");
    /**
     * The column <code>information_schema.ROUTINES.EXTERNAL_NAME</code>.
     */
    public final TableField<RoutinesRecord, String> EXTERNAL_NAME = createField(DSL.name("EXTERNAL_NAME"), SQLDataType.VARCHAR(64), this, "");
    /**
     * The column <code>information_schema.ROUTINES.EXTERNAL_LANGUAGE</code>.
     */
    public final TableField<RoutinesRecord, String> EXTERNAL_LANGUAGE = createField(DSL.name("EXTERNAL_LANGUAGE"), SQLDataType.VARCHAR(64), this, "");
    /**
     * The column <code>information_schema.ROUTINES.PARAMETER_STYLE</code>.
     */
    public final TableField<RoutinesRecord, String> PARAMETER_STYLE = createField(DSL.name("PARAMETER_STYLE"), SQLDataType.VARCHAR(8).nullable(false).defaultValue(DSL.inline("", SQLDataType.VARCHAR)), this, "");
    /**
     * The column <code>information_schema.ROUTINES.IS_DETERMINISTIC</code>.
     */
    public final TableField<RoutinesRecord, String> IS_DETERMINISTIC = createField(DSL.name("IS_DETERMINISTIC"), SQLDataType.VARCHAR(3).nullable(false).defaultValue(DSL.inline("", SQLDataType.VARCHAR)), this, "");
    /**
     * The column <code>information_schema.ROUTINES.SQL_DATA_ACCESS</code>.
     */
    public final TableField<RoutinesRecord, String> SQL_DATA_ACCESS = createField(DSL.name("SQL_DATA_ACCESS"), SQLDataType.VARCHAR(64).nullable(false).defaultValue(DSL.inline("", SQLDataType.VARCHAR)), this, "");
    /**
     * The column <code>information_schema.ROUTINES.SQL_PATH</code>.
     */
    public final TableField<RoutinesRecord, String> SQL_PATH = createField(DSL.name("SQL_PATH"), SQLDataType.VARCHAR(64), this, "");
    /**
     * The column <code>information_schema.ROUTINES.SECURITY_TYPE</code>.
     */
    public final TableField<RoutinesRecord, String> SECURITY_TYPE = createField(DSL.name("SECURITY_TYPE"), SQLDataType.VARCHAR(7).nullable(false).defaultValue(DSL.inline("", SQLDataType.VARCHAR)), this, "");
    /**
     * The column <code>information_schema.ROUTINES.CREATED</code>.
     */
    public final TableField<RoutinesRecord, LocalDateTime> CREATED = createField(DSL.name("CREATED"), SQLDataType.LOCALDATETIME(0).nullable(false).defaultValue(DSL.inline("0000-00-00 00:00:00", SQLDataType.LOCALDATETIME)), this, "");
    /**
     * The column <code>information_schema.ROUTINES.LAST_ALTERED</code>.
     */
    public final TableField<RoutinesRecord, LocalDateTime> LAST_ALTERED = createField(DSL.name("LAST_ALTERED"), SQLDataType.LOCALDATETIME(0).nullable(false).defaultValue(DSL.inline("0000-00-00 00:00:00", SQLDataType.LOCALDATETIME)), this, "");
    /**
     * The column <code>information_schema.ROUTINES.SQL_MODE</code>.
     */
    public final TableField<RoutinesRecord, String> SQL_MODE = createField(DSL.name("SQL_MODE"), SQLDataType.VARCHAR(8192).nullable(false).defaultValue(DSL.inline("", SQLDataType.VARCHAR)), this, "");
    /**
     * The column <code>information_schema.ROUTINES.ROUTINE_COMMENT</code>.
     */
    public final TableField<RoutinesRecord, String> ROUTINE_COMMENT = createField(DSL.name("ROUTINE_COMMENT"), SQLDataType.CLOB.nullable(false), this, "");
    /**
     * The column <code>information_schema.ROUTINES.DEFINER</code>.
     */
    public final TableField<RoutinesRecord, String> DEFINER = createField(DSL.name("DEFINER"), SQLDataType.VARCHAR(93).nullable(false).defaultValue(DSL.inline("", SQLDataType.VARCHAR)), this, "");
    /**
     * The column <code>information_schema.ROUTINES.CHARACTER_SET_CLIENT</code>.
     */
    public final TableField<RoutinesRecord, String> CHARACTER_SET_CLIENT = createField(DSL.name("CHARACTER_SET_CLIENT"), SQLDataType.VARCHAR(32).nullable(false).defaultValue(DSL.inline("", SQLDataType.VARCHAR)), this, "");
    /**
     * The column <code>information_schema.ROUTINES.COLLATION_CONNECTION</code>.
     */
    public final TableField<RoutinesRecord, String> COLLATION_CONNECTION = createField(DSL.name("COLLATION_CONNECTION"), SQLDataType.VARCHAR(32).nullable(false).defaultValue(DSL.inline("", SQLDataType.VARCHAR)), this, "");
    /**
     * The column <code>information_schema.ROUTINES.DATABASE_COLLATION</code>.
     */
    public final TableField<RoutinesRecord, String> DATABASE_COLLATION = createField(DSL.name("DATABASE_COLLATION"), SQLDataType.VARCHAR(32).nullable(false).defaultValue(DSL.inline("", SQLDataType.VARCHAR)), this, "");

    private Routines(Name alias, Table<RoutinesRecord> aliased) {
        this(alias, aliased, null);
    }

    private Routines(Name alias, Table<RoutinesRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>information_schema.ROUTINES</code> table reference
     */
    public Routines(String alias) {
        this(DSL.name(alias), ROUTINES);
    }

    /**
     * Create an aliased <code>information_schema.ROUTINES</code> table reference
     */
    public Routines(Name alias) {
        this(alias, ROUTINES);
    }

    /**
     * Create a <code>information_schema.ROUTINES</code> table reference
     */
    public Routines() {
        this(DSL.name("ROUTINES"), null);
    }

    public <O extends Record> Routines(Table<O> child, ForeignKey<O, RoutinesRecord> key) {
        super(child, key, ROUTINES);
    }

    /**
     * The class holding records for this type
     */
    @Override
    public Class<RoutinesRecord> getRecordType() {
        return RoutinesRecord.class;
    }

    @Override
    public Schema getSchema() {
        return InformationSchema.INFORMATION_SCHEMA;
    }

    @Override
    public Routines as(String alias) {
        return new Routines(DSL.name(alias), this);
    }

    @Override
    public Routines as(Name alias) {
        return new Routines(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Routines rename(String name) {
        return new Routines(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Routines rename(Name name) {
        return new Routines(name, null);
    }
}
