/*
 * This file is generated by jOOQ.
 */
package org.blackdread.sqltojava.jooq.generated.tables.records;


import org.blackdread.sqltojava.jooq.generated.tables.InnodbSysForeign;
import org.jooq.Field;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.TableRecordImpl;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class InnodbSysForeignRecord extends TableRecordImpl<InnodbSysForeignRecord> implements Record5<String, String, String, UInteger, UInteger> {

    private static final long serialVersionUID = 1L;

    /**
     * Create a detached InnodbSysForeignRecord
     */
    public InnodbSysForeignRecord() {
        super(InnodbSysForeign.INNODB_SYS_FOREIGN);
    }

    /**
     * Create a detached, initialised InnodbSysForeignRecord
     */
    public InnodbSysForeignRecord(String id, String forName, String refName, UInteger nCols, UInteger type) {
        super(InnodbSysForeign.INNODB_SYS_FOREIGN);

        setId(id);
        setForName(forName);
        setRefName(refName);
        setNCols(nCols);
        setType(type);
    }

    /**
     * Getter for <code>information_schema.INNODB_SYS_FOREIGN.ID</code>.
     */
    public String getId() {
        return (String) get(0);
    }

    /**
     * Setter for <code>information_schema.INNODB_SYS_FOREIGN.ID</code>.
     */
    public void setId(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>information_schema.INNODB_SYS_FOREIGN.FOR_NAME</code>.
     */
    public String getForName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>information_schema.INNODB_SYS_FOREIGN.FOR_NAME</code>.
     */
    public void setForName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>information_schema.INNODB_SYS_FOREIGN.REF_NAME</code>.
     */
    public String getRefName() {
        return (String) get(2);
    }

    /**
     * Setter for <code>information_schema.INNODB_SYS_FOREIGN.REF_NAME</code>.
     */
    public void setRefName(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>information_schema.INNODB_SYS_FOREIGN.N_COLS</code>.
     */
    public UInteger getNCols() {
        return (UInteger) get(3);
    }

    /**
     * Setter for <code>information_schema.INNODB_SYS_FOREIGN.N_COLS</code>.
     */
    public void setNCols(UInteger value) {
        set(3, value);
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    /**
     * Getter for <code>information_schema.INNODB_SYS_FOREIGN.TYPE</code>.
     */
    public UInteger getType() {
        return (UInteger) get(4);
    }

    /**
     * Setter for <code>information_schema.INNODB_SYS_FOREIGN.TYPE</code>.
     */
    public void setType(UInteger value) {
        set(4, value);
    }

    @Override
    public Row5<String, String, String, UInteger, UInteger> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    @Override
    public Row5<String, String, String, UInteger, UInteger> valuesRow() {
        return (Row5) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return InnodbSysForeign.INNODB_SYS_FOREIGN.ID;
    }

    @Override
    public Field<String> field2() {
        return InnodbSysForeign.INNODB_SYS_FOREIGN.FOR_NAME;
    }

    @Override
    public Field<String> field3() {
        return InnodbSysForeign.INNODB_SYS_FOREIGN.REF_NAME;
    }

    @Override
    public Field<UInteger> field4() {
        return InnodbSysForeign.INNODB_SYS_FOREIGN.N_COLS;
    }

    @Override
    public Field<UInteger> field5() {
        return InnodbSysForeign.INNODB_SYS_FOREIGN.TYPE;
    }

    @Override
    public String component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getForName();
    }

    @Override
    public String component3() {
        return getRefName();
    }

    @Override
    public UInteger component4() {
        return getNCols();
    }

    @Override
    public UInteger component5() {
        return getType();
    }

    @Override
    public String value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getForName();
    }

    @Override
    public String value3() {
        return getRefName();
    }

    @Override
    public UInteger value4() {
        return getNCols();
    }

    @Override
    public UInteger value5() {
        return getType();
    }

    @Override
    public InnodbSysForeignRecord value1(String value) {
        setId(value);
        return this;
    }

    @Override
    public InnodbSysForeignRecord value2(String value) {
        setForName(value);
        return this;
    }

    @Override
    public InnodbSysForeignRecord value3(String value) {
        setRefName(value);
        return this;
    }

    @Override
    public InnodbSysForeignRecord value4(UInteger value) {
        setNCols(value);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    @Override
    public InnodbSysForeignRecord value5(UInteger value) {
        setType(value);
        return this;
    }

    @Override
    public InnodbSysForeignRecord values(String value1, String value2, String value3, UInteger value4, UInteger value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }
}
