/*
 * This file is generated by jOOQ.
 */
package org.blackdread.sqltojava.jooq.generated.tables.records;


import org.blackdread.sqltojava.jooq.generated.tables.InnodbTempTableInfo;
import org.jooq.Field;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.TableRecordImpl;
import org.jooq.types.UInteger;
import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class InnodbTempTableInfoRecord extends TableRecordImpl<InnodbTempTableInfoRecord> implements Record6<ULong, String, UInteger, UInteger, String, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Create a detached InnodbTempTableInfoRecord
     */
    public InnodbTempTableInfoRecord() {
        super(InnodbTempTableInfo.INNODB_TEMP_TABLE_INFO);
    }

    /**
     * Create a detached, initialised InnodbTempTableInfoRecord
     */
    public InnodbTempTableInfoRecord(ULong tableId, String name, UInteger nCols, UInteger space, String perTableTablespace, String isCompressed) {
        super(InnodbTempTableInfo.INNODB_TEMP_TABLE_INFO);

        setTableId(tableId);
        setName(name);
        setNCols(nCols);
        setSpace(space);
        setPerTableTablespace(perTableTablespace);
        setIsCompressed(isCompressed);
    }

    /**
     * Getter for <code>information_schema.INNODB_TEMP_TABLE_INFO.TABLE_ID</code>.
     */
    public ULong getTableId() {
        return (ULong) get(0);
    }

    /**
     * Setter for <code>information_schema.INNODB_TEMP_TABLE_INFO.TABLE_ID</code>.
     */
    public void setTableId(ULong value) {
        set(0, value);
    }

    /**
     * Getter for <code>information_schema.INNODB_TEMP_TABLE_INFO.NAME</code>.
     */
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>information_schema.INNODB_TEMP_TABLE_INFO.NAME</code>.
     */
    public void setName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>information_schema.INNODB_TEMP_TABLE_INFO.N_COLS</code>.
     */
    public UInteger getNCols() {
        return (UInteger) get(2);
    }

    /**
     * Setter for <code>information_schema.INNODB_TEMP_TABLE_INFO.N_COLS</code>.
     */
    public void setNCols(UInteger value) {
        set(2, value);
    }

    /**
     * Getter for <code>information_schema.INNODB_TEMP_TABLE_INFO.SPACE</code>.
     */
    public UInteger getSpace() {
        return (UInteger) get(3);
    }

    /**
     * Setter for <code>information_schema.INNODB_TEMP_TABLE_INFO.SPACE</code>.
     */
    public void setSpace(UInteger value) {
        set(3, value);
    }

    /**
     * Getter for <code>information_schema.INNODB_TEMP_TABLE_INFO.PER_TABLE_TABLESPACE</code>.
     */
    public String getPerTableTablespace() {
        return (String) get(4);
    }

    /**
     * Setter for <code>information_schema.INNODB_TEMP_TABLE_INFO.PER_TABLE_TABLESPACE</code>.
     */
    public void setPerTableTablespace(String value) {
        set(4, value);
    }

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    /**
     * Getter for <code>information_schema.INNODB_TEMP_TABLE_INFO.IS_COMPRESSED</code>.
     */
    public String getIsCompressed() {
        return (String) get(5);
    }

    /**
     * Setter for <code>information_schema.INNODB_TEMP_TABLE_INFO.IS_COMPRESSED</code>.
     */
    public void setIsCompressed(String value) {
        set(5, value);
    }

    @Override
    public Row6<ULong, String, UInteger, UInteger, String, String> fieldsRow() {
        return (Row6) super.fieldsRow();
    }

    @Override
    public Row6<ULong, String, UInteger, UInteger, String, String> valuesRow() {
        return (Row6) super.valuesRow();
    }

    @Override
    public Field<ULong> field1() {
        return InnodbTempTableInfo.INNODB_TEMP_TABLE_INFO.TABLE_ID;
    }

    @Override
    public Field<String> field2() {
        return InnodbTempTableInfo.INNODB_TEMP_TABLE_INFO.NAME;
    }

    @Override
    public Field<UInteger> field3() {
        return InnodbTempTableInfo.INNODB_TEMP_TABLE_INFO.N_COLS;
    }

    @Override
    public Field<UInteger> field4() {
        return InnodbTempTableInfo.INNODB_TEMP_TABLE_INFO.SPACE;
    }

    @Override
    public Field<String> field5() {
        return InnodbTempTableInfo.INNODB_TEMP_TABLE_INFO.PER_TABLE_TABLESPACE;
    }

    @Override
    public Field<String> field6() {
        return InnodbTempTableInfo.INNODB_TEMP_TABLE_INFO.IS_COMPRESSED;
    }

    @Override
    public ULong component1() {
        return getTableId();
    }

    @Override
    public String component2() {
        return getName();
    }

    @Override
    public UInteger component3() {
        return getNCols();
    }

    @Override
    public UInteger component4() {
        return getSpace();
    }

    @Override
    public String component5() {
        return getPerTableTablespace();
    }

    @Override
    public String component6() {
        return getIsCompressed();
    }

    @Override
    public ULong value1() {
        return getTableId();
    }

    @Override
    public String value2() {
        return getName();
    }

    @Override
    public UInteger value3() {
        return getNCols();
    }

    @Override
    public UInteger value4() {
        return getSpace();
    }

    @Override
    public String value5() {
        return getPerTableTablespace();
    }

    @Override
    public String value6() {
        return getIsCompressed();
    }

    @Override
    public InnodbTempTableInfoRecord value1(ULong value) {
        setTableId(value);
        return this;
    }

    @Override
    public InnodbTempTableInfoRecord value2(String value) {
        setName(value);
        return this;
    }

    @Override
    public InnodbTempTableInfoRecord value3(UInteger value) {
        setNCols(value);
        return this;
    }

    @Override
    public InnodbTempTableInfoRecord value4(UInteger value) {
        setSpace(value);
        return this;
    }

    @Override
    public InnodbTempTableInfoRecord value5(String value) {
        setPerTableTablespace(value);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    @Override
    public InnodbTempTableInfoRecord value6(String value) {
        setIsCompressed(value);
        return this;
    }

    @Override
    public InnodbTempTableInfoRecord values(ULong value1, String value2, UInteger value3, UInteger value4, String value5, String value6) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        return this;
    }
}
