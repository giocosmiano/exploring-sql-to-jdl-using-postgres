/*
 * This file is generated by jOOQ.
 */
package org.blackdread.sqltojava.jooq.generated.tables.records;


import org.blackdread.sqltojava.jooq.generated.tables.Processlist;
import org.jooq.Field;
import org.jooq.Record8;
import org.jooq.Row8;
import org.jooq.impl.TableRecordImpl;
import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class ProcesslistRecord extends TableRecordImpl<ProcesslistRecord> implements Record8<ULong, String, String, String, String, Integer, String, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Create a detached ProcesslistRecord
     */
    public ProcesslistRecord() {
        super(Processlist.PROCESSLIST);
    }

    /**
     * Create a detached, initialised ProcesslistRecord
     */
    public ProcesslistRecord(ULong id, String user, String host, String db, String command, Integer time, String state, String info) {
        super(Processlist.PROCESSLIST);

        setId(id);
        setUser(user);
        setHost(host);
        setDb(db);
        setCommand(command);
        setTime(time);
        setState(state);
        setInfo(info);
    }

    /**
     * Getter for <code>information_schema.PROCESSLIST.ID</code>.
     */
    public ULong getId() {
        return (ULong) get(0);
    }

    /**
     * Setter for <code>information_schema.PROCESSLIST.ID</code>.
     */
    public void setId(ULong value) {
        set(0, value);
    }

    /**
     * Getter for <code>information_schema.PROCESSLIST.USER</code>.
     */
    public String getUser() {
        return (String) get(1);
    }

    /**
     * Setter for <code>information_schema.PROCESSLIST.USER</code>.
     */
    public void setUser(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>information_schema.PROCESSLIST.HOST</code>.
     */
    public String getHost() {
        return (String) get(2);
    }

    /**
     * Setter for <code>information_schema.PROCESSLIST.HOST</code>.
     */
    public void setHost(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>information_schema.PROCESSLIST.DB</code>.
     */
    public String getDb() {
        return (String) get(3);
    }

    /**
     * Setter for <code>information_schema.PROCESSLIST.DB</code>.
     */
    public void setDb(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>information_schema.PROCESSLIST.COMMAND</code>.
     */
    public String getCommand() {
        return (String) get(4);
    }

    /**
     * Setter for <code>information_schema.PROCESSLIST.COMMAND</code>.
     */
    public void setCommand(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>information_schema.PROCESSLIST.TIME</code>.
     */
    public Integer getTime() {
        return (Integer) get(5);
    }

    /**
     * Setter for <code>information_schema.PROCESSLIST.TIME</code>.
     */
    public void setTime(Integer value) {
        set(5, value);
    }

    /**
     * Getter for <code>information_schema.PROCESSLIST.STATE</code>.
     */
    public String getState() {
        return (String) get(6);
    }

    /**
     * Setter for <code>information_schema.PROCESSLIST.STATE</code>.
     */
    public void setState(String value) {
        set(6, value);
    }

    // -------------------------------------------------------------------------
    // Record8 type implementation
    // -------------------------------------------------------------------------

    /**
     * Getter for <code>information_schema.PROCESSLIST.INFO</code>.
     */
    public String getInfo() {
        return (String) get(7);
    }

    /**
     * Setter for <code>information_schema.PROCESSLIST.INFO</code>.
     */
    public void setInfo(String value) {
        set(7, value);
    }

    @Override
    public Row8<ULong, String, String, String, String, Integer, String, String> fieldsRow() {
        return (Row8) super.fieldsRow();
    }

    @Override
    public Row8<ULong, String, String, String, String, Integer, String, String> valuesRow() {
        return (Row8) super.valuesRow();
    }

    @Override
    public Field<ULong> field1() {
        return Processlist.PROCESSLIST.ID;
    }

    @Override
    public Field<String> field2() {
        return Processlist.PROCESSLIST.USER;
    }

    @Override
    public Field<String> field3() {
        return Processlist.PROCESSLIST.HOST;
    }

    @Override
    public Field<String> field4() {
        return Processlist.PROCESSLIST.DB;
    }

    @Override
    public Field<String> field5() {
        return Processlist.PROCESSLIST.COMMAND;
    }

    @Override
    public Field<Integer> field6() {
        return Processlist.PROCESSLIST.TIME;
    }

    @Override
    public Field<String> field7() {
        return Processlist.PROCESSLIST.STATE;
    }

    @Override
    public Field<String> field8() {
        return Processlist.PROCESSLIST.INFO;
    }

    @Override
    public ULong component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getUser();
    }

    @Override
    public String component3() {
        return getHost();
    }

    @Override
    public String component4() {
        return getDb();
    }

    @Override
    public String component5() {
        return getCommand();
    }

    @Override
    public Integer component6() {
        return getTime();
    }

    @Override
    public String component7() {
        return getState();
    }

    @Override
    public String component8() {
        return getInfo();
    }

    @Override
    public ULong value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getUser();
    }

    @Override
    public String value3() {
        return getHost();
    }

    @Override
    public String value4() {
        return getDb();
    }

    @Override
    public String value5() {
        return getCommand();
    }

    @Override
    public Integer value6() {
        return getTime();
    }

    @Override
    public String value7() {
        return getState();
    }

    @Override
    public String value8() {
        return getInfo();
    }

    @Override
    public ProcesslistRecord value1(ULong value) {
        setId(value);
        return this;
    }

    @Override
    public ProcesslistRecord value2(String value) {
        setUser(value);
        return this;
    }

    @Override
    public ProcesslistRecord value3(String value) {
        setHost(value);
        return this;
    }

    @Override
    public ProcesslistRecord value4(String value) {
        setDb(value);
        return this;
    }

    @Override
    public ProcesslistRecord value5(String value) {
        setCommand(value);
        return this;
    }

    @Override
    public ProcesslistRecord value6(Integer value) {
        setTime(value);
        return this;
    }

    @Override
    public ProcesslistRecord value7(String value) {
        setState(value);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    @Override
    public ProcesslistRecord value8(String value) {
        setInfo(value);
        return this;
    }

    @Override
    public ProcesslistRecord values(ULong value1, String value2, String value3, String value4, String value5, Integer value6, String value7, String value8) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        return this;
    }
}
